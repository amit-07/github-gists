[{"C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\index.js":"1","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\App.js":"2","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\reportWebVitals.js":"3","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\components\\SearchbarComponent.js":"4","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\services\\gist_service.js":"5","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\components\\GistCardComponent.js":"6","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\utils\\languageUtils.js":"7"},{"size":547,"mtime":1611929440513,"results":"8","hashOfConfig":"9"},{"size":1784,"mtime":1611938744574,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1031,"mtime":1611931069834,"results":"12","hashOfConfig":"9"},{"size":694,"mtime":1611938775248,"results":"13","hashOfConfig":"9"},{"size":1774,"mtime":1611940980079,"results":"14","hashOfConfig":"9"},{"size":220,"mtime":1611934417046,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ssfskp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\index.js",[],["35","36"],"C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\App.js",["37"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport SearchBar from './components/SearchbarComponent';\nimport GistCard from './components/GistCardComponent';\n\nimport {getAllGists} from './services/gist_service';\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  const [userGists, setUserGists] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n   const handleSearchInputChanges = (e) => {\n     setUser(e.target.value);\n   };\n\n   const resetInputField = () => {\n     setUser(\"\");\n   };\n\n   const callSearchFunction = (e) => {\n     e.preventDefault();\n     search(user);\n     resetInputField();\n   };\n\n   const search = async (user) => {\n     console.log(user);\n     setLoading(true);\n     const gists = await getAllGists(user);\n     setLoading(false);\n     setUserGists(gists);\n   }\n\n   const renderCards = (loading, gists) => {\n     return loading ? (\n       <Row>\n         <Spinner animation=\"grow\" variant=\"info\" />\n       </Row>\n     ) : (\n       gists ? userGists.map((item, idx) => (\n         <Row>\n           <GistCard gist={item} key={idx} />\n         </Row>\n       )) : \n       !loading && gists === undefined && <Row>No Gists were found for the user!</Row>\n     );\n   };\n\n  return (\n    <div className=\"App\">\n      <header className=\"\">\n        <h1>Github Gists</h1>\n      </header>\n      <Container>\n        <Row>\n          <SearchBar\n            handleChange={handleSearchInputChanges}\n            handleSearch={callSearchFunction}\n            value={user}\n          />\n        </Row>\n        {renderCards(loading, userGists)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\reportWebVitals.js",[],"C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\components\\SearchbarComponent.js",["38"],"import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nimport \"./searchbar.css\";\r\n\r\nconst SearchBar = ({handleSearch, handleChange, value}) => {\r\n    return (\r\n      <div className=\"searchbar\">\r\n        <form>\r\n          <InputGroup className=\"mb-12\">\r\n            <FormControl\r\n              placeholder=\"Search a github user for gists\"\r\n              aria-label=\"Search a github user for gists\"\r\n              aria-describedby=\"basic-addon2\"\r\n              onChange={handleChange}\r\n              value={value}\r\n            />\r\n            <InputGroup.Append>\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                onClick={handleSearch}\r\n                variant=\"primary\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </form>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\services\\gist_service.js",["39"],"import axios from 'axios';\r\n\r\n\r\nconst getAllGists = async (user) => {\r\n    try {\r\n        const baseUrl = `https://api.github.com/users`;\r\n        const response = await axios.get(`${baseUrl}/${user}/gists`);\r\n        const data = await response.data;\r\n        return data;\r\n    } catch(error){\r\n        console.log(\"error\", error);\r\n    }\r\n}\r\n\r\nconst getLatestForkers = async (gistId) => {\r\n    try {\r\n        const forkUrl = `https://api.github.com/gists/${gistId}/forks`;\r\n        const response = await axios.get(forkUrl);\r\n        const data = response.splice(3);\r\n        return data;\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\nexport { getAllGists, getLatestForkers };","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\components\\GistCardComponent.js",["40"],"import React, {useState, useEffect} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nimport {pickGistLanguages} from '../utils/languageUtils';\r\nimport {getLatestForkers} from '../services/gist_service';\r\n\r\n\r\nconst GistCard = ({gist}) => {\r\n    const [forkers, setForkers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const latestForkers = getLatestForkers(gist.id);\r\n        setForkers(latestForkers);\r\n    }, [])\r\n\r\n    return (\r\n      <>\r\n        <Card border=\"primary\" style={{ width: \"100%\" }}>\r\n          <Card.Header>Gist</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {gist.owner.login}\r\n              <img\r\n                className=\"avatar\"\r\n                src={gist.owner.avatar_url}\r\n                alt={gist.owner.login}\r\n                title={gist.owner.login}\r\n              />\r\n            </Card.Title>\r\n            <Card.Text>Description: {gist.description}</Card.Text>\r\n            <b>Languages: </b>\r\n            {pickGistLanguages(gist.files).map((item, idx) => (\r\n              <>\r\n                <Badge variant=\"primary\" key={idx}>\r\n                  {item}\r\n                </Badge>{\" \"}\r\n              </>\r\n            ))}\r\n            <p className=\"forkers\"><b>Last Forked By:</b>\r\n            {\r\n                forkers.length > 0 ? (forkers.map((item, idx) => (\r\n                    <img\r\n                className=\"avatar\"\r\n                src={item.owner.avatar_url}\r\n                alt={item.owner.login}\r\n                title={item.owner.login}\r\n              />\r\n                ))\r\n                ) : ` No forkers found`\r\n            }\r\n            </p>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default GistCard;","C:\\Users\\I506345\\OneDrive - SAP SE\\Documents\\SelfLearningProjects\\github_gists\\github-gists\\src\\utils\\languageUtils.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},{"ruleId":"49","severity":1,"message":"50","line":24,"column":17,"nodeType":"51","endLine":24,"endColumn":34},{"ruleId":"45","severity":1,"message":"52","line":15,"column":7,"nodeType":"47","messageId":"48","endLine":15,"endColumn":23},{"ruleId":"53","severity":1,"message":"54","line":15,"column":8,"nodeType":"55","endLine":15,"endColumn":10,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getLatestForkers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gist.id'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [gist.id]",{"range":"62","text":"63"},[469,471],"[gist.id]"]